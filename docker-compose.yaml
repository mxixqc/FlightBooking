version: "3.8"

volumes:
  rabbitmq_data:

services:

  # loginMS - Node
  login:
    build:
      context: ./loginMS
      dockerfile: login.Dockerfile
    image: flight/login:1.0
    restart: always
    ports:
      - "5001:5001"
    
  # flightSearchMS - Node
  flightsearch:
    build:
      context: ./flightSearchMS
      dockerfile: flightsearch.Dockerfile
    image: flight/flightsearch:1.0
    restart: always
    ports:
      - "3000:3000"

  # booking - Node
  booking:
    build:
      context: ./BookingMS
      dockerfile: booking.Dockerfile
    image: flight/booking:1.0
    restart: always
    ports:
      - "5000:5000"
  
  # rabbitmq - python
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes: 
      - rabbitmq_data:/var/lib/rabbitmq

  # flaskmail - python
  flaskmail:
    build:
      context: ./makeBookingCMS
      dockerfile: flaskmail.Dockerfile
    image: flight/flaskmail:1.0
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONBUFFERED: 1


  # makeBookingCMS - python
  makebooking:
    build:
      context: ./makeBookingCMS
      dockerfile: makebookingcms.Dockerfile
    image: flight/makebooking:1.0
    restart: always
    depends_on:
      - booking
      - flaskmail
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONBUFFERED: 1
    ports:
      - "5100:5100"

  